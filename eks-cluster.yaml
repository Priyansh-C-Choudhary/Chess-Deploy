AWSTemplateFormatVersion: '2010-09-09'
Description: CloudFormation template for provisioning networking resources and an EKS Cluster

Parameters:
  VpcCIDR:
    Type: String
    Default: "10.0.0.0/16"
    Description: CIDR block for the VPC

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCIDR
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: MyEKS-VPC

  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: "10.0.1.0/24"
      AvailabilityZone: !Select [ 0, !GetAZs ap-south-1 ]
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: PublicSubnet1

  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: "10.0.2.0/24"
      AvailabilityZone: !Select [ 1, !GetAZs ap-south-1 ]
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: PrivateSubnet1

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: MyEKS-IGW

  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  NatGatewayEIP:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc

  NatGateway:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NatGatewayEIP.AllocationId
      SubnetId: !Ref PublicSubnet1

  PrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: PrivateRouteTable

  PrivateRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      DestinationCidrBlock: "0.0.0.0/0"
      NatGatewayId: !Ref NatGateway

  RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet1
      RouteTableId: !Ref PrivateRouteTable

  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for EKS nodes
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 3000  # Expose port 3000
          ToPort: 3000    # Expose port 3000
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443  # HTTPS (TCP port 443)
          ToPort: 443    # HTTPS (TCP port 443)
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 10250  # Kubelet (TCP port 10250)
          ToPort: 10250    # Kubelet (TCP port 10250)
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: EKS-SecurityGroup


  EKSIAMRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
                - eks.amazonaws.com  # Add eks.amazonaws.com to the list of services
            Action: sts:AssumeRole
      Policies:
        - PolicyName: EKSNodePolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "ec2:DescribeInstances"
                  - "ec2:DescribeTags"
                  - "ec2:DescribeRouteTables"
                  - "ec2:DescribeSecurityGroups"
                  - "ec2:DescribeSubnets"
                  - "ec2:DescribeVolumes"
                  - "ec2:DescribeVpcs"
                  - "ec2:CreateNatGateway"
                  - "ec2:DeleteNatGateway"
                  - "ec2:ModifyNatGateway"
                  - "eks:DescribeCluster"
                  - "eks:ListNodegroups"
                Resource: "*"

  MyEKSCluster:
    Type: AWS::EKS::Cluster
    Properties:
      Name: chesscluster
      RoleArn: !GetAtt EKSIAMRole.Arn
      ResourcesVpcConfig:
        SubnetIds:
          - !Ref PublicSubnet1
          - !Ref PrivateSubnet1
        SecurityGroupIds:
          - !GetAtt SecurityGroup.GroupId

  EKSNodeGroup:
    Type: AWS::EKS::Nodegroup
    Properties:
      ClusterName: !Ref MyEKSCluster
      NodegroupName: MyNodeGroup
      Subnets:
        - !Ref PublicSubnet1
        - !Ref PrivateSubnet1
      InstanceTypes:
        - t3.medium  # Instance type for worker nodes
      ScalingConfig:
        MinSize: 2  # Minimum number of nodes
        DesiredSize: 2  # Desired number of nodes
        MaxSize: 5  # Maximum number of nodes
      NodeRole: !GetAtt EKSIAMRole.Arn  # IAM role for the nodes

Outputs:
  VPCId:
    Description: VPC ID
    Value: !Ref VPC
  PublicSubnetId1:
    Description: Public Subnet ID 1
    Value: !Ref PublicSubnet1
  PrivateSubnetId1:
    Description: Private Subnet ID 1
    Value: !Ref PrivateSubnet1
  SecurityGroupId:
    Description: Security Group ID
    Value: !GetAtt SecurityGroup.GroupId
  EKSIAMRoleId:
    Description: EKS IAM Role ID
    Value: !Ref EKSIAMRole
